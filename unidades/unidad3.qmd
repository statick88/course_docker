# 4: Buenas Prácticas y Seguridad
## Conceptos:
### Escaneo de imagen:
Después de construir una imagen, es una buena práctica realizar un escaneo en busca de vulnerabilidades. Esto implica el uso de herramientas como [Snyk](https://snyk.io/), que examinan la imagen en busca de posibles problemas de seguridad. Por ejemplo, puedes usar el comando `snyk test` para escanear tu imagen.

### Capas de la imagen:
Cada imagen de Docker se construye en capas. Las capas son un aspecto clave para entender la construcción y optimización de imágenes. Docker utiliza un sistema de archivos en capas, donde cada instrucción en el Dockerfile crea una nueva capa en la imagen. Este enfoque permite la reutilización eficiente de capas entre imágenes, lo que ahorra espacio de almacenamiento y tiempo de construcción. Puedes usar el comando `docker history <image>` para ver las capas de una imagen.

### Multi-Stage builds:
[Multi-Stage builds](https://docs.docker.com/develop/develop-images/multistage-build/) es una técnica que te permite usar múltiples etapas de construcción en un solo Dockerfile, lo que te permite crear imágenes más pequeñas y más eficientes.

## ¿Qué Aprendimos?
- Comprendemos la importancia de realizar escaneos de seguridad en las imágenes de Docker.
- Aprendimos cómo implementar Multi-Stage builds para optimizar el tamaño y la seguridad de las imágenes.
- Entendimos cómo Docker utiliza un sistema de archivos en capas para optimizar el almacenamiento y la construcción de imágenes.

## Resumen
En esta unidad, aprendimos sobre varias buenas prácticas y técnicas de seguridad en Docker, incluyendo el escaneo de imagen, el uso de capas de imagen y la implementación de Multi-Stage builds. Estas técnicas son esenciales para construir y mantener imágenes de Docker seguras y eficientes.