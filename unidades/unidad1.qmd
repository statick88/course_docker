# 3. Creación de un servidor web con Docker y Nginx

## Conceptos
::: justify
**Docker** es una plataforma que permite a los desarrolladores empaquetar aplicaciones en contenedores. Un **contenedor** es una unidad estándar de software que empaqueta el código y todas sus dependencias para que la aplicación se ejecute de manera rápida y confiable de un entorno informático a otro.
**Nginx** es un servidor web que puede usarse para servir contenido estático, como archivos HTML, CSS y JavaScript.

## Ejemplos

Un ejemplo de un Dockerfile para un servidor web Nginx es el siguiente:

```Dockerfile
# Use an official nginx image as a parent image
FROM nginx:latest

# Set the working directory in the container to /usr/share/nginx/html
WORKDIR /usr/share/nginx/html

# Copy the 'web' directory (at your Dockerfile's location) into the container
COPY web .
```
:::
## Actividad Práctica

1. Crea un directorio llamado web y añade algunos archivos HTML, CSS y JavaScript.
2. Crea un Dockerfile como el del ejemplo anterior.
3. Construye una imagen Docker a partir del Dockerfile
4. Crea y ejecuta un contenedor a partir de la imagen

<details>
    <summary>Resolución de la Actividad Práctica</summary>

::: justify
**Proyecto Web con Docker y Nginx**

Este proyecto utiliza Docker y Nginx para servir una aplicación web estática.

**Creación del Dockerfile**

Crea un archivo llamado `Dockerfile` en la raíz del proyecto con el siguiente contenido:

```Dockerfile
# Use an official nginx image as a parent image
FROM nginx:latest

# Set the working directory in the container to /usr/share/nginx/html
WORKDIR /usr/share/nginx/html

# Copy the 'web' directory (at your Dockerfile's location) into the container
COPY web .
```
**Construcción de la imagen Docker**

Para construir una imagen Docker a partir del Dockerfile, ejecuta el siguiente comando en la terminal:
``` bash
docker build -t my-nginx-image .
```
Este comando crea una nueva imagen Docker llamada **my-nginx-imag**e a partir del Dockerfile.

**Creación del contenedor Docker.**

Para crear y ejecutar un contenedor a partir de la imagen que acabas de crear, ejecuta el siguiente comando en la terminal:

``` bash
docker run -it --rm -dp 8080:80 -v ${pwd}/web:/usr/share/nginx/html --name web my-nginx-image
```
Este comando crea y ejecuta un nuevo contenedor Docker llamado **web** a partir de la imagen **my-nginx-image**. 

El contenedor sirve la aplicación web en el puerto 8080 y monta el directorio **web** de tu máquina local en el directorio **/usr/share/nginx/html** del contenedor. 

Esto significa que cualquier cambio que hagas en los archivos de tu directorio **web** local se reflejará en vivo en el contenedor.
:::
</details>

## ¿Qué aprendimos?
::: justify
En este tutorial, aprendimos cómo usar Docker y Nginx para crear un servidor web que sirve contenido estático. Aprendimos cómo crear un Dockerfile, cómo construir una imagen Docker a partir de un Dockerfile, y cómo crear y ejecutar un contenedor a partir de una imagen Docker. También aprendimos cómo montar un directorio de nuestra máquina local en un contenedor Docker para poder ver los cambios en vivo en nuestro servidor web.
:::