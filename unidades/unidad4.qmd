# 6. DevContainers

## Conceptos:

### DevContainers

DevContainers es una extensión de Visual Studio Code que permite definir entornos de desarrollo en contenedores. Facilita la configuración y el uso de entornos de desarrollo reproducibles.

## Ejemplos:

Configurar un entorno DevContainers para un stack MEAN:

``` json
// En el archivo .devcontainer/devcontainer.json
{
  "name": "MEAN Stack",
  "dockerFile": "Dockerfile",
  "settings": {},
  "extensions": [
    "dbaeumer.vscode-eslint",
    "ms-azuretools.vscode-docker"
  ],
  "forwardPorts": [3000, 4200, 27017],
  "postCreateCommand": "yarn install && ng serve",
  "appPort": [3000]
}
```
Este archivo de configuración crea un entorno DevContainers utilizando un Dockerfile específico, instala extensiones de Visual Studio Code, reenvía puertos necesarios para el desarrollo MEAN stack, y ejecuta comandos post-creación.

## Práctica:

- Configura un entorno DevContainers para un proyecto Python:
- Asegúrate de que el entorno tiene la extensión "ms-python.python" instalada.

<details>
<summary>Resolución de la Actividad Práctica</summary>

Ejemplo de archivo .devcontainer/devcontainer.json:

``` json
{
  "name": "Python Project",
  "dockerFile": "Dockerfile.python",
  "extensions": [
    "ms-python.python"
  ],
  "forwardPorts": [8000],
  "postCreateCommand": "pip install -r requirements.txt && python manage.py runserver 0.0.0.0:8000",
  "appPort": [8000]
}
```
</details>

:::{.callout-tip}
Usa DevContainers para garantizar un entorno de desarrollo coherente y fácilmente replicable.
:::

## ¿Qué Aprendimos?

- Comprendemos cómo utilizar DevContainers para crear entornos de desarrollo específicos para proyectos.
- Ahora sabemos cómo configurar extensiones y reenviar puertos en entornos DevContainers.
