# 3. Dockerfile y Docker Compose

## Conceptos:

### Dockerfile

Un Dockerfile es un archivo de texto que contiene instrucciones para construir una imagen Docker. Es esencialmente un script que define cómo se construirá la imagen.

### Docker Compose

Docker Compose es una herramienta para definir y gestionar aplicaciones Docker con múltiples contenedores. Permite definir la configuración de servicios, redes y volúmenes en un archivo YAML.

## Ejemplos:

Crear un Dockerfile para una aplicación Node.js:

``` dockerfile
FROM node:14
WORKDIR /app
COPY . .
CMD ["npm", "start"]
```
Este Dockerfile configura una imagen de Node.js, establece el directorio de trabajo, copia los archivos locales al contenedor y define el comando para ejecutar la aplicación.

Configurar Docker Compose para una aplicación Node.js:

``` yaml
version: '3'
services:
  myapp:
    build:
      context: .
      dockerfile: Dockerfile.node
    image: my-node-app
```
Este archivo docker-compose.yml define un servicio llamado "myapp" que construirá una imagen usando el Dockerfile "Dockerfile.node" y le asignará el nombre de "my-node-app".

## Práctica:

- Crea un Dockerfile para una aplicación Python simple.
- Configura un archivo docker-compose.yml para ejecutar la aplicación.

<details>
<summary>Resolución de la Actividad Práctica</summary>

Ejemplo de Dockerfile (nombre: Dockerfile.python):

``` dockerfile
FROM python:3.9
WORKDIR /app
COPY . .
CMD ["python", "app.py"]
```
Ejemplo de docker-compose.yml:

``` yaml
version: '3'
services:
  myapp:
    build:
      context: .
      dockerfile: Dockerfile.python
    image: my-python-app
```
</details>

## ¿Qué Aprendimos?

- Aprendimos a crear un Dockerfile para personalizar una imagen Docker.
- Entendimos cómo usar Docker Compose para orquestar servicios en un entorno multi-contenedor.
- Practicamos la configuración básica de un Dockerfile y un archivo docker-compose.yml.